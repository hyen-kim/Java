
=============================================================================

12주차 : 윈도우 프로그래밍

=============================================================================

제 6장. 윈도우 프로그래밍

* GUI 
- 이미지 혹은 그래픽 이용
- 사용자에게 편리한 입출력 기능 제공
- 윈도우 환경 제공

* 자바의 윈도우 프로그램 패키지
- AWT 패키지와 Swing 패키지 제공
- Swing 패키지 사용 권장







< 컨테이너와 컴포넌트 >
컨테이너 --> 컴포넌트를 배치할 수 있는 상자라고 보면 됨
컴포넌트 --> 컨테이너안에 배치되는 것들을 의미

-------- JFrame --------	<-- 최상위 컨테이너

----- JPanel -----		<-- 컨테이너
  JLabel			<-- 컴포넌트
  JTextField
  JChoice
  JLabel
------------------

JButton JButton JButton		<-- 컴포넌트

--------------------------






< Swing 사용을 위한 import 문 >

* Swing 패키지의 import 
- import javax.swing.*;

* 그래픽과 이벤트를 위한 import
- import.java.awt.*;		// 그래픽 처리를 위한 클래스
- import.java.awt.event.*;	// AWT 이벤트 사용을 위한 클래스
- import.java.swing.*;		// Swing 컴포넌트 클래스
- import.java.swing.event.*;	// Swing 이벤트 사용을 위한 클래스





< 윈도우의 기본 : 프레임 >

* JFrame 클래스를 이용한 프레임 생성
- 윈도우를 구성하기 위한 기본적인 프레임
- 2가지 방법 사용 가능
- JFrame 클래스를 객체로 생성하는 방법
- JFrame 클래스를 상속받는 방법 ( 권장 )



< 프레임 생성 >
1. 객체로 생성
2. 상속		: 참조 변수없이 사용할 수 있어서 더 편리

< 프레임에 컴포넌트 추가 방법 >
컴포넌트 클래스명 객체명;

객체명 = new 컴포넌트 클래스명();

add(객체명);




< Swing 컴포넌트 : JLabel >
- 컴포넌트 : JLabel 
	: 이름표와 같은 역할
	: 화면에 글자 형태 로 표시 됨
	
JLabel 컴포넌트
JLabel lb = new JLabel("라벨글씨");

* 레이아웃을 설정하지 않으면 기본적으로 Border Layout으로 설정이 되는데 
Border Layout은 동서남북으로 표시가 되는 것이고 
양 옆으로 나란히 표시하고 싶다면 
setLayout(new FlowLayout()); 을 이용하면 된다.
ex) LabelEx1 참고
성명 :			주민번호 :






< Swing 컴포넌트 : JButton >
- 컴포넌트 : JButton 
	: 버튼의 기능 수행
	: 클릭할 수 있는 버튼 모양

JButton 컴포넌트
JButton lb = new JButton("버튼글씨");








< 글자색/배경색 지정 >
- 컴포넌트 : 글자/배경 색상 지정
	: 컴포넌트의 글자 및 배경 색을 지정할 수 있다.

컴포넌트의 색상 지정 방법
객체.setBackground(Color.색상);		// 객체의 색상 지정
객체.setForeground(Color.색상);		// 객체의 글자색 지정








< Swing 컴포넌트 : JPanel >	--> 기본적인 레이아웃 Flow Layout
- 컴포넌트 : JPanel
	: 다른 컴포넌트를 포함할 수 있다.
	: 컴포넌트들을 배치하기 위하여 사용

JPanel 컴포넌트
JPanel pan = new JPanel(Layout y);




