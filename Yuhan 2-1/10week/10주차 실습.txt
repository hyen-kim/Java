
=============================================================================

10주차

=============================================================================

< 기타 문법 : this와 this() >

1. 객체 자신을 의미하는 this
- 객체 자신을 의미한다
2. 객체 자체를 인수로 사용할 때의 this
3. 생성자를 호출할 때의 this






< 인스턴스 변수와 클래스 변수 >

인스턴스 변수
- 일반적으로 사용하는 변수
- 각각의 객체마다 독립적으로 사용 가능

클래스 변수
- 클래스에 한 개만 존재하는 변수
- 모든 객체에서 하나의 변수를 공유함
- static 키워드 사용






< final >

1. final 클래스 
final class AAA {
	..
	..
}

class BBB extends AAA {	// 상속 오류
	..
	..
	// BBB가 AAA라는 클래스를 부모 클래스로 상속받으려고 할 때 에러 발생
}

2. final 메소드 
public class AAA {
	final void FuncA(){}
}

class BBB extends AAA {	// 재정의 오류
	void FuncA(){	//메소드의 재정의는 오버라이딩
		.. 
	}
}

3. final 필드, 상수의 정의
public class AAA {
	final double pi = 3.141592;
}
	...
	pi = 3.14;	// 변경 불가





< 클래스 활용 >
1. 영화 예약 시스템 구현
- 간단한 영화 예약 시스템 구현
- 프로그램 4-16 참조

2. 로또 번호 생성기 구현 
- 로또 번호를 생성해 주는 클래스 구현하기
- 프로그램 4-17 참조






< 제 5장. 상속 >
00. 내용
- 클래스 상속의 개념
- 클래스 상속과 객체
- 메소드 오버라이딩
- 추상 클래스와 인터페이스 


01. 상속의 개념
- 클래스의 기능을 상속
- 부모 클래스
- 자식 클래스 
- 부모 클래스의 모든 기능을 자식 클래스가 상속
- 필드와 메소드를 그대로 이어 받음
- 기능의 추가, 수정 가능


02. 상속의 효과 : 기능의 구체화 (추가)

		상속				   상속
class 전화기	------->	class 휴대전화기   -------> 	class 스마트폰	
전화걸기			전화걸기			전화걸기
전화받기			전화받기			전화받기
				배터리 장착			배터리 장착
				무선 통신 기능			무선 통신 기능
								인터넷접속 기능
								앱 설치 및 실행

		: 기능의 수정
		상속				   상속
class 전화기	------->	class 휴대전화기   -------> 	class 스마트폰	
전화걸기     기능수정		전화걸기			전화걸기
전화받기 ---------------->	전화받기			전화받기
	     자동으로 응답	배터리 장착			배터리 장착
				무선 통신 기능			무선 통신 기능
								인터넷접속 기능
								앱 설치 및 실행

03. 상속의 필요성
- 클래스 간 기능의 중복 정의 불필요
- 필드와 메소드를 재사용함으로써 클래스 간결화
- 클래스 간 계층적 분류 및 관리

Super class : classA		subclass : classB
필드(변수)			필드(변수)
var1				var1
var2				var2
				var3

메소드(함수)			메소드(함수)
메소드1				메소드1
메소드2				메소드2
				메소드3

      자식클래스     부모클래스
class classB extends classA {
	...
	자식 클래스에 추가할 필드와 메소드
}




















