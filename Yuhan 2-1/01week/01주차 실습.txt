
==============================================================
1. 객체지향 언어
2. 자바 언어의 특징
3. 자바 언어 개발 환경
==============================================================

< 1강 >

절차지향 언어
- c언어와 같이 순서대로 프로그램이 실행됨 (일련된 작업순서 => 위에서 아래로)
- 프로그램이 방대해질수록 어려움이 따름 
ex) C언어

객체지향 언어 : 변수와 함수와 결합
- 규모가 큰 프로그램을 체계적으로 신속히 개발
- 상속, 정보, 은폐 (은닉성-> 보여줄 땐 보여주고 감출 땐 감춤), 다형성 등 제공
- 코드를 간단히 만들 수 있음
- 재사용할 수 있다는 큰 장점이 있음
ex) C++, Java, Python

자바언어의 등장
- 1991년 '선 마이크로시스템즈'에서 개발 
- 여러 가지 플랫폼에서 실행 가능하도록 개발
- 현재는 '오라클 사'에서 제공
- Java Applet -> APP -> Servlet -> JSP -> Android 

자바언어의 특징
1. C++ VS JAVA 
C++
- 연산자 오버로딩, 다중상속 가능
- 메모리 관리가 수동으로 이루어짐
- 클래스 라이브러리가 불충분함
- 분산 환경에 부적합
- 컴파일 과정 필요
- 호환성이 부족 함
- 보안이 뛰어나지 못함

JAVA
- 연산자 오버로딩, 다중상속 기능 삭제
- 메모리 관리가 자동으로 이루어짐
- 클래스 라이브러리가 충분함
- 분산환경에 적합함
- 인터프리터 형식으로 컴파일 불필요
- 호환성이 뛰어남
- 보안성이 뛰어남

2. * 호환성이 뛰어남
= os에 독립적
= 기계에 독립적
- 자바소스코드 -> 자바 응용프로그램 -> 자바 가상머신 (JVM) -> 매킨토시, PC, 리눅스 등.. 
- 어떤 기계든 운영체제든 실행가능

자바언어의 개발환경 구축
1. JDK 설치하기 -> 자바 개발 툴
2. JAVA 환경변수 설정하기
3. 이클립스 설치하기 -> 통합 개발 툴 (IDE)

자바 배포판
1. JRE
- 자바 응용 프로그램의 실행 환경

2. JDK
- 자바 프로그램을 개발하기 위한 도구 모음
- java SE -> 설치
- java ME 
- java EE 

자바 API 온라인 문서
- 자바의 기능을 온라인으로 확인할 수 있는 문서
- https://docs.oracle.com/javase/8/docs/api/


< 2강 >

1. 자바 JDK 설치
- 자바의 개발 툴 설치 (java SE : JDK 12.0.2)
- http://java.sun.com/ -> http://java.oracle.com/

2. 이클립스 설치
- 통합개발툴 (IDE)
- https://www.eclipse.org/

3. 이클립스 실행


< 3강 >


Workspace -> Project -> Class

1. 작업공간 (워크스페이스) 설정하기
- 컴파일한 결과물이 저장되는 디렉토리
- 프로그램 소스코드, 사진, 등의 파일이 저장됨
- 자신만의 디렉토리를 만들어 설정하기
- [File] -> [Switch Workspace] -> [Other] : 워크스페이스 위치 변경할 때

2. 자바 프로젝트 생성
- 프로젝트 : 자바의 프로그램을 작성하기 위한 단위
- 클래스 : 자바 프로그램의 가장 작은 단위
- 프로젝트 안에 여러 개의 클래스를 만들 수 있다.
- [File] -> [New] -> [Project] -> [Java Project] 

3. 자바 클래스 생성
- 자바 프로그램의 기본 단위
- [File] -> [New] -> [Class]












