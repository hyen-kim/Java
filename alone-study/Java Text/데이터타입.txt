
변수란?
- 프로그램에서 필요한 데이터를 메모리에 저장하는것을 말한다.
- 메모리에 저장한다. ( 데이터를 컴퓨터에 기억장치(RAM)에 저장한다.)
- 변수를 통하여 데이터를 저장한다는 것은 메모리에 저장하는 공간을 배분 받는 것을 
  의미한다.

변수선언
1) 변수의 선언은 첫번째 글자는 문자이거나 '$','_' 시작해야 한다.
2) 문자는 영어로 사용되며 대소문자를 엄격히 구분한다.
3) 첫문자는 영어의 소문자로 시작하되, 다른단어가 붙을 경우 대문자를 사용한다.
4)

---------------------------------------------------------------------------------

Sysout 쓴후 컨트롤 스페이스 눌르면 자동완성임.

예)System.out.println();

---------------------------------------------------------------------------------

데이터 타입의 종류

정수형 : byte, char, short, int, long
실수형 : float, double
논리형 : boolean (true, false), (참, 거짓),(0,1)

데이터를 저장하기 위하여 데이터 타입을 통해 미리 정의한 데이터를 입력하지만,
메모리는 무한한 상태가 아니기 때문에 타입에 따라 메모리 할당량이 다르다.

package practice;

================================================================================

데이터 타입의 크기

정수형
1) byte : 1byte (8bit)
2) char : abyte (16bit)
3) short : 2byte (16bit)
4) int : 4byte (32bit)
5) long : 8byte (64bit)k

실수형
1) float : 4byte (32bit)
2) doble : 8byte (64bit)

논리형
1) boolean : 1byte (8bit)

================================================================================

데이터 타입의 형 변환 순서

byte(1) < shout(2) < int(4) < long(8) < float(4) < doble(8)

---------------------------------------------------------------------------------
1. byte 형 

public class CalcArea {

	public static void main(String[] args) {
		
		
		//바이트 형태의 클래스 변수를 의미한다.
		//byte의 허용 최소 크기
		System.out.println(Byte.MIN_VALUE); //-128까지 넣을수있다.
		
		//byte의 허용 최대 크기
		System.out.println(Byte.MAX_VALUE); //127까지 넣을수있다
	}
}

================================================================================

package practice;


public class CalcArea {

	public static void main(String[] args) {
		
		/* byte 데이터타입 */
		
		byte var1= -128;
		byte var2 = -30;
		byte var3 = 0;
		byte var4 = 03; 
		//0은 비어있는 공간이므로 3만출력.
		
		byte var5=127;
		//byte var6=128;
		
		System.out.println(var1);
		System.out.println(var2);
		System.out.println(var3);
		System.out.println(var4);
		System.out.println(var5);	
	}
}

---------------------------------------------------------------------------------

2. int 형

public class CalcArea {

	public static void main(String[] args) {
		
		int value1 = 1;
		
		System.out.println(value1);
		System.out.println(Integer.MIN_VALUE); //-2147483648
		System.out.println(Integer.MAX_VALUE); //2147483647
	}
}

public class DateTypeIntExample {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/* int 데이터타입 */
		
		int var1 = 10;			// 1~9의 범위 처음글자가 시작하면 10진법 계산
		int var2 = 010;			// 처음글자가 0으로 시작하면 8진법 계산
		int var3 = 0xff;		// 처음글자가 0x으로 시작하면 16진법 계산
		
		System.out.println(var1); //10
		System.out.println(var2); //8
		System.out.println(var3); //255	
		
	}
}

=================================================================================
package class1211;

public class DateTypeIntExample {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/* int 데이터타입 */
		
		int var1 = 10;			// 1~9의 범위 처음글자가 시작하면 10진법 계산
		int var2 = 010;			// 처음글자가 0으로 시작하면 8진법 계산
		int var3 = 0xff;		// 처음글자가 0x으로 시작하면 16진법 계산
		
		System.out.println(var1); //10
		System.out.println(var2); //8
		System.out.println(var3); //255	
		
	}
}

----------------------------------------------------------------------------------
2. long 형

package class1211;

class DateTypelongExample {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		/* long 데이터 타입 */
		
		long var1 = 10;
		long var2 = 20L;
		long var3 = 10000000000L; 
		
		/* 
		 * 왜 롱은 10000000000; 을 하면 왜 에러가 뜰까요?
		 * <--- 지정된 변수의 형태의 리터럴 타입에 맞지 않음.
		 * ( 지정된 값을 넣어줘야만 합니다. )
		 * L을 입력하면 됩니다.
		 */
		
	System.out.println(var1);
	System.out.println(var2);
	System.out.println(var3);
		
	}
}

---------------------------------------------------------------------------------
3. char 형

- 문자는 두가지의 코드표를 가지고 온다. (유니코드 , 아스키코드 )
- \u <--- 유니코드로 계산을 해서 유니코드에 해당하는 코드표에서 값을 가져와라. 라는말.
- 숫자는 아스키 코드이다. (0~254)까지 있다.
package class1211;

public class DateTypecharExample {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		/* char 데이터 타입 */
		char c1 = 'A';
		char c2 = 65;		// 유니코드에 해당하는 10진법의 코드를 표기
		char c3 = '\u0041';	// 유니코드에 해당하는 16진법의 코드를 표기
		char c4 = '가';
		char c5 = 44032;
		char c6 = '\uac00';
		
		System.out.println(c1);
		System.out.println(c2);
		System.out.println(c3);
		System.out.println(c4);
		System.out.println(c5);
		System.out.println(c6);
	}
}

---------------------------------------------------------------------------------
4. double and float 형

package class1211;

public class DateTypeFloatDoubleExample {


	public static void main(String[] args) {
		// TODO Auto-generated method stub

		/* float and double 데이터 타입 */
		
		double var1 = 3.14;
		float var2 = 3.14F;
		//float var2 = 3.14 <--- 리터럴 타입이 일치하지 않습니다.
		// 리터럴 타입을 꼭 지정해줘야 float의 형태의 값으로 들어간다.
	
		double var3 = 0.123456789123456789;
		//0.12345678912345678
		float var4 = 0.123456789123456789F;
		//0.123456789
		
		System.out.println(var1);
		System.out.println(var2);
		System.out.println(var3);
		System.out.println(var4);
	
	}
}

---------------------------------------------------------------------------------
5. boolean 형

- boolean 데이터 타입 ( 논리형 )
- true(참) , false(거짓) 만 쓸수있습니다.


package class1211;

public class DateTypeBooleanExample {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		boolean Value = true;
		//true(참) , false(거짓) 
		
		if(Value){
			System.out.println("value는 참입니다.");
		}
		
		else {
		System.out.println("value는 거짓입니다.");
		}

	}

}







